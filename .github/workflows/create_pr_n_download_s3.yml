name: download from Amazon S3 and create pr to develop branch

on:
  workflow_dispatch:
  pull_request_target:
    branches:
      - develop

env:
  PR_TITLE: download from Amzon s3
  DEST_BRANCH: develop
  BRANCH_PREFIX: feat/dl_s3_

jobs:
  create_pr_n_download_s3:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set current datetime as env variable
        env:
          TZ: 'Asia/Tokyo'
        run: echo "CURRENT_DATETIME=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Create new branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git switch -c ${{ env.BRANCH_PREFIX}}${{ env.CURRENT_DATETIME }}
          git push -u origin ${{ env.BRANCH_PREFIX}}${{ env.CURRENT_DATETIME }}

      - name: Download file from S3
        env:
          S3_DOWNLOAD_BUCKET: ${{ secrets.S3_DOWNLOAD_BUCKET }}
        run: |
          aws s3 cp s3://$S3_DOWNLOAD_BUCKET/ec/template/ ./s3_download --recursive

      - name: Add and Commit
        uses: EndBug/add-and-commit@v9
        with:
          branch: ${{ env.BRANCH_PREFIX}}${{ env.CURRENT_DATETIME }}
          message: ${{ env.PR_TITLE }}

      - name: Create pull request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: ${{ env.BRANCH_PREFIX}}${{ env.CURRENT_DATETIME }}
          destination_branch: ${{ env.DEST_BRANCH }}
          pr_title: ${{ env.PR_TITLE }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Microsoft Teams Notification
        uses: skitionek/notify-microsoft-teams@master
        if: failure()
        with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
          needs: ${{ toJson(needs) }}
          job: ${{ toJson(job) }}
          steps: ${{ toJson(steps) }}